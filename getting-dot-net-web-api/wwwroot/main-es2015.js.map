{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/recipe.model.ts","./src/app/models/role.model.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/recieps/recieps.component.ts","./src/app/recieps/recieps.component.html","./src/app/recieps/recipes-detail/recipes-detail.component.ts","./src/app/recieps/recipes-detail/recipes-detail.component.html","./src/app/recieps/recipes-list/recipes-item/recipes-item.component.ts","./src/app/recieps/recipes-list/recipes-item/recipes-item.component.html","./src/app/recieps/recipes-list/recipes-list.component.ts","./src/app/recieps/recipes-list/recipes-list.component.html","./src/app/recieps/recipes-start/recipes-start.component.ts","./src/app/recieps/recipes-start/recipes-start.component.html","./src/app/roles/roles-list/roles-list.component.ts","./src/app/roles/roles-list/roles-list.component.html","./src/app/roles/roles.component.ts","./src/app/roles/roles.component.html","./src/app/routes/app-routing.module.ts","./src/app/services/recipe.Service.ts","./src/app/services/role.Service.ts","./src/app/to-do/to-do.component.ts","./src/app/to-do/to-do.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular Demo';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ToDoComponent } from './to-do/to-do.component';\r\nimport { ReciepsComponent } from './recieps/recieps.component';\r\nimport { RecipesStartComponent } from './recieps/recipes-start/recipes-start.component';\r\nimport { RecipesListComponent } from './recieps/recipes-list/recipes-list.component';\r\nimport { RecipesDetailComponent } from './recieps/recipes-detail/recipes-detail.component';\r\nimport { RecipesItemComponent } from './recieps/recipes-list/recipes-item/recipes-item.component';\r\nimport { AppRoutingModule } from './routes/app-routing.module';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { RolesListComponent } from './roles/roles-list/roles-list.component';\r\nimport { RecipeService } from './services/recipe.Service';\r\nimport { RoleService } from './services/role.Service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    ToDoComponent,\r\n    ReciepsComponent,\r\n    RecipesStartComponent,\r\n    RecipesListComponent,\r\n    RecipesDetailComponent,\r\n    RecipesItemComponent,\r\n    RolesComponent,\r\n    RolesListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [RecipeService, RoleService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class RecipeModel {\r\n    public name: string;\r\n    public description: string;\r\n    public imagePath: string;\r\n\r\n    constructor(name: string, desc: string, imagePath: string) {\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.imagePath = imagePath;\r\n    }\r\n}","export class RoleModel {\r\n    constructor(public name: string, public status: boolean, public createdAt: string) { }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav  class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Angular Demo</a>\n        <div  class=\"collapse navbar-collapse\"  id=\"navbarSupportedContent\">\n            <ul  class=\"navbar-nav mr-auto\">\n                <li routerLinkActive=\"active\" class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/recipes\">Recipes</a>\n                </li>\n                <li routerLinkActive=\"active\" class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/roles\">Roles</a>\n                </li>\n            </ul>\n        </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recieps',\n  templateUrl: './recieps.component.html',\n  styleUrls: ['./recieps.component.css']\n})\nexport class ReciepsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-md-5\">\n        <app-recipes-list></app-recipes-list>\n    </div>\n    <div class=\"col-md-7\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeModel } from '../../models/recipe.model';\nimport { RecipeService } from '../../services/recipe.Service';\n\n@Component({\n  selector: 'app-recipes-detail',\n  templateUrl: './recipes-detail.component.html',\n  styleUrls: ['./recipes-detail.component.css']\n})\nexport class RecipesDetailComponent implements OnInit {\n  recipe: RecipeModel;\n  id: number;\n  \n  constructor(private recipeService: RecipeService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n    );\n  }\n\n\n}\n","<div class=\"card mb-3\">\n    <img class=\"card-img-top\" src=\"{{ recipe.imagePath }}\" alt=\"{{ recipe.name }}\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ recipe.name }}</h5>\n        <p class=\"card-text\">{{ recipe.description }}</p>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeModel } from '../../../models/recipe.model';\n\n@Component({\n  selector: 'app-recipes-item',\n  templateUrl: './recipes-item.component.html',\n  styleUrls: ['./recipes-item.component.css']\n})\nexport class RecipesItemComponent implements OnInit {\n  @Input() recipe: RecipeModel;\n  @Input() index: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a\n    [routerLink]=\"[index]\"\n    routerLinkActive=\"active\"\n    class=\"list-group-item clearfix list-group-item-action mt-2\">\n    <div class=\"d-flex w-200 justify-content-between\">\n        <div>\n            <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n            <small>{{ recipe.description }}</small>\n        </div>\n        <img src=\"{{ recipe.imagePath }}\" alt=\"{{ recipe.name }}\" class=\"img-responsive\" style=\"max-height: 50px;\">\n    </div>\n</a>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipeModel } from '../../models/recipe.model';\nimport { RecipeService } from '../../services/recipe.Service';\n\n@Component({\n  selector: 'app-recipes-list',\n  templateUrl: './recipes-list.component.html',\n  styleUrls: ['./recipes-list.component.css']\n})\nexport class RecipesListComponent implements OnInit {\n\n  recipes: RecipeModel[] = [];\n\n  constructor(private recipeService: RecipeService,\n    private router: Router, \n    private route: ActivatedRoute\n     ) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">        \n        <app-recipes-item\n         *ngFor=\"let recipeEl of recipes; let i = index\"\n          [recipe]=\"recipeEl\"\n          [index]=\"i\"\n         ></app-recipes-item>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes-start',\n  templateUrl: './recipes-start.component.html',\n  styleUrls: ['./recipes-start.component.css']\n})\nexport class RecipesStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please Select Recipe </h3>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoleService } from 'src/app/services/role.Service';\nimport { RoleModel } from 'src/app/models/role.model';\n\n@Component({\n  selector: 'app-roles-list',\n  templateUrl: './roles-list.component.html',\n  styleUrls: ['./roles-list.component.css']\n})\nexport class RolesListComponent implements OnInit, OnDestroy {\n\n  roleList: RoleModel[];\n  private subscription: Subscription;\n\n  constructor(private rlService: RoleService) {\n   }\n\n  ngOnInit(): void {\n    this.roleList = this.rlService.getRoleList();\n    this.subscription = this.rlService.roleListChanged\n      .subscribe(\n        (roleList: RoleModel[]) => {\n          this.roleList = roleList;\n        }\n      );\n  }\n\n  onEditRole(index: number) {\n    this.rlService.startedEditing.next(index);\n  }\n\n  onDeleteRole(index: number) {\n    this.rlService.deleteRole(index);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Created At</th>\n        <th scope=\"col\">Edit</th>\n        <th scope=\"col\">Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let role of roleList; let i = index\">\n        <td>{{ role.name }}</td>\n        <td>{{ role.status }}</td>\n        <td>{{ role.createdAt }}</td>\n        <td><button type=\"button\" class=\"btn btn-success\" (click)=\"onEditRole(i)\">Edit</button></td>\n        <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteRole(i)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RoleService } from '../services/role.Service';\nimport { RoleModel } from '../models/role.model';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) rlForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: RoleModel;\n  \n  constructor(private rlService: RoleService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.rlService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.editedItem = this.rlService.getRole(index);\n          this.rlForm.setValue({\n            name: this.editedItem.name,\n            status: this.editedItem.status\n          })\n        }\n      );\n  }\n\n  onSubmit(form: NgForm) {\n    let { name, status } = form.value;\n    status = status ? true : false;\n    const newRole = new RoleModel(name, status, new Date().toLocaleString());\n    if (this.editMode) {\n      this.rlService.updateRole(this.editedItemIndex, newRole);\n    } else {\n      this.rlService.addRole(newRole);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onReset() {\n    this.rlForm.reset();\n    this.editMode = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"container mt-4\">\n    <h4>{{ editMode ? 'Update' : 'Add' }} Role</h4>\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n        <div class=\"form-group\">\n            <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Role Name\"\n                name=\"name\"\n                required\n                ngModel\n                >\n        </div>\n        <div class=\"form-group form-check\">\n            <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                name=\"status\"\n                ngModel\n                >\n            <label class=\"form-check-label\">Status</label>\n        </div>\n        <button\n           type=\"submit\" \n           class=\"btn btn-primary mr-2\" \n           [disabled]=\"!f.valid\">\n           {{ editMode ? 'Update' : 'Add' }}\n        </button>\n        <button\n            class=\"btn btn-primary\"\n            type=\"button\"\n            (click)=\"onReset()\">Reset\n        </button>\n      </form>\n</div>\n\n<!-- List of Roles -->\n<div class=\"container mt-5\">\n    <h4>Role List</h4>\n    <div class=\"table-responsive\">\n        <app-roles-list></app-roles-list>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ToDoComponent } from '../to-do/to-do.component';\nimport { ReciepsComponent } from '../recieps/recieps.component';\nimport { RecipesStartComponent } from '../recieps/recipes-start/recipes-start.component';\nimport { RecipesDetailComponent } from '../recieps/recipes-detail/recipes-detail.component';\nimport { RolesComponent } from '../roles/roles.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: ToDoComponent },\n  { path: 'recipes', component: ReciepsComponent,\n   children: [\n      { path: '', component: RecipesStartComponent },\n      { path: ':id', component: RecipesDetailComponent }\n    ] \n  },\n  { path: 'roles', component: RolesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { RecipeModel } from '../models/recipe.model';\r\n\r\nexport class RecipeService {\r\n    private recipes: RecipeModel[] = [\r\n        new RecipeModel('Shrimp Recipes', 'These shrimp recipes are easy enough for a quick weeknight dinner, delish enough for date night', \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-taco-lime-shrimp-still006-1527253576.jpeg\"),\r\n        new RecipeModel('Potato Recipes', 'Baked, fried, or mashed, there\"s no wrong way to cook potatoes. Need more comfort food?', \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/fried-mashed-potato-balls-horizontal-1533320721.jpg\")  \r\n    ];\r\n\r\n    getRecipes() {\r\n        return this.recipes.slice();\r\n    }\r\n\r\n    getRecipe(index: number) {\r\n        return this.recipes[index];\r\n    }\r\n}","import { Subject } from 'rxjs'\r\nimport { RoleModel } from '../models/role.model';\r\n\r\nexport class RoleService {\r\n  roleListChanged = new Subject<RoleModel[]>();\r\n  startedEditing = new Subject<number>();\r\n  roleList: RoleModel[] = [];\r\n\r\n  constructor() {\r\n    const createdAt = new Date().toLocaleString();\r\n    this.roleList.push(\r\n      new RoleModel('Admin', true, createdAt),\r\n      new RoleModel('Super Admin', true, createdAt)\r\n    );\r\n   }\r\n\r\n  getRoleList() {\r\n    return this.roleList.slice();\r\n  }\r\n\r\n  getRole(index: number) {\r\n    return this.roleList[index];\r\n  }\r\n\r\n  addRole(role: RoleModel) {\r\n    this.roleList.push(role);\r\n    console.log('addRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n\r\n  updateRole(index: number, newRole: RoleModel) {\r\n    this.roleList[index] = newRole;\r\n    console.log('updateRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n\r\n  deleteRole(index: number) {\r\n    this.roleList.splice(index, 1);\r\n    console.log('deleteRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.css']\n})\nexport class ToDoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container my-4\">\n    <p class=\"font-weight-bold\">To-Do List</p>\n    <ul class=\"list-group list-group-flush\">\n      \n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check1\" checked>\n          <label class=\"custom-control-label\" for=\"check1\">Added Routes</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check2\" checked>\n          <label class=\"custom-control-label\" for=\"check2\">Added Form</label>\n        </div>\n      </li>\n      \n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check8\" checked>\n          <label class=\"custom-control-label\" for=\"check8\">Added Http</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check3\">\n          <label class=\"custom-control-label\" for=\"check3\">Added NgRx for State Management</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check4\">\n          <label class=\"custom-control-label\" for=\"check4\">Dapper to access SQL Database using Repository Patter</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check5\" checked>\n          <label class=\"custom-control-label\" for=\"check5\">Use three layer architecture in API</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check6\">\n          <label class=\"custom-control-label\" for=\"check6\">Log the Input and Output from API in Serilog</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check7\">\n          <label class=\"custom-control-label\" for=\"check7\">Enable Elmah for enception handling</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check9\" checked>\n          <label class=\"custom-control-label\" for=\"check9\">Added Swagger and JWT</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check10\" checked>\n          <label class=\"custom-control-label\" for=\"check10\">Added Migration, DB Connection</label>\n        </div>\n      </li>\n\n    </ul>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}