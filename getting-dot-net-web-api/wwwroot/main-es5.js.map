{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/recipe.model.ts","webpack:///src/app/models/role.model.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/recieps/recieps.component.ts","webpack:///src/app/recieps/recieps.component.html","webpack:///src/app/recieps/recipes-detail/recipes-detail.component.ts","webpack:///src/app/recieps/recipes-detail/recipes-detail.component.html","webpack:///src/app/recieps/recipes-list/recipes-item/recipes-item.component.ts","webpack:///src/app/recieps/recipes-list/recipes-item/recipes-item.component.html","webpack:///src/app/recieps/recipes-list/recipes-list.component.ts","webpack:///src/app/recieps/recipes-list/recipes-list.component.html","webpack:///src/app/recieps/recipes-start/recipes-start.component.ts","webpack:///src/app/recieps/recipes-start/recipes-start.component.html","webpack:///src/app/roles/roles-list/roles-list.component.ts","webpack:///src/app/roles/roles-list/roles-list.component.html","webpack:///src/app/roles/roles.component.ts","webpack:///src/app/roles/roles.component.html","webpack:///src/app/routes/app-routing.module.ts","webpack:///src/app/services/recipe.Service.ts","webpack:///src/app/services/role.Service.ts","webpack:///src/app/to-do/to-do.component.ts","webpack:///src/app/to-do/to-do.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","RecipeModel","name","desc","imagePath","description","RoleModel","status","createdAt","NavbarComponent","ReciepsComponent","RecipesDetailComponent","recipeService","route","params","subscribe","recipe","getRecipe","RecipesItemComponent","RecipesListComponent","router","recipes","getRecipes","RecipesStartComponent","RolesListComponent","rlService","roleList","getRoleList","subscription","roleListChanged","index","startedEditing","next","deleteRole","unsubscribe","RolesComponent","editMode","editedItemIndex","editedItem","getRole","rlForm","setValue","form","value","newRole","Date","toLocaleString","updateRole","addRole","reset","onSubmit","onReset","appRoutes","path","component","children","AppRoutingModule","forRoot","RecipeService","slice","RoleService","push","role","console","log","splice","ToDoComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular Demo';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ToDoComponent } from './to-do/to-do.component';\r\nimport { ReciepsComponent } from './recieps/recieps.component';\r\nimport { RecipesStartComponent } from './recieps/recipes-start/recipes-start.component';\r\nimport { RecipesListComponent } from './recieps/recipes-list/recipes-list.component';\r\nimport { RecipesDetailComponent } from './recieps/recipes-detail/recipes-detail.component';\r\nimport { RecipesItemComponent } from './recieps/recipes-list/recipes-item/recipes-item.component';\r\nimport { AppRoutingModule } from './routes/app-routing.module';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { RolesListComponent } from './roles/roles-list/roles-list.component';\r\nimport { RecipeService } from './services/recipe.Service';\r\nimport { RoleService } from './services/role.Service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    ToDoComponent,\r\n    ReciepsComponent,\r\n    RecipesStartComponent,\r\n    RecipesListComponent,\r\n    RecipesDetailComponent,\r\n    RecipesItemComponent,\r\n    RolesComponent,\r\n    RolesListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [RecipeService, RoleService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class RecipeModel {\r\n    public name: string;\r\n    public description: string;\r\n    public imagePath: string;\r\n\r\n    constructor(name: string, desc: string, imagePath: string) {\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.imagePath = imagePath;\r\n    }\r\n}","export class RoleModel {\r\n    constructor(public name: string, public status: boolean, public createdAt: string) { }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav  class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Angular Demo</a>\n        <div  class=\"collapse navbar-collapse\"  id=\"navbarSupportedContent\">\n            <ul  class=\"navbar-nav mr-auto\">\n                <li routerLinkActive=\"active\" class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/recipes\">Recipes</a>\n                </li>\n                <li routerLinkActive=\"active\" class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/roles\">Roles</a>\n                </li>\n            </ul>\n        </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recieps',\n  templateUrl: './recieps.component.html',\n  styleUrls: ['./recieps.component.css']\n})\nexport class ReciepsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-md-5\">\n        <app-recipes-list></app-recipes-list>\n    </div>\n    <div class=\"col-md-7\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeModel } from '../../models/recipe.model';\nimport { RecipeService } from '../../services/recipe.Service';\n\n@Component({\n  selector: 'app-recipes-detail',\n  templateUrl: './recipes-detail.component.html',\n  styleUrls: ['./recipes-detail.component.css']\n})\nexport class RecipesDetailComponent implements OnInit {\n  recipe: RecipeModel;\n  id: number;\n  \n  constructor(private recipeService: RecipeService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n    );\n  }\n\n\n}\n","<div class=\"card mb-3\">\n    <img class=\"card-img-top\" src=\"{{ recipe.imagePath }}\" alt=\"{{ recipe.name }}\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ recipe.name }}</h5>\n        <p class=\"card-text\">{{ recipe.description }}</p>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeModel } from '../../../models/recipe.model';\n\n@Component({\n  selector: 'app-recipes-item',\n  templateUrl: './recipes-item.component.html',\n  styleUrls: ['./recipes-item.component.css']\n})\nexport class RecipesItemComponent implements OnInit {\n  @Input() recipe: RecipeModel;\n  @Input() index: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a\n    [routerLink]=\"[index]\"\n    routerLinkActive=\"active\"\n    class=\"list-group-item clearfix list-group-item-action mt-2\">\n    <div class=\"d-flex w-200 justify-content-between\">\n        <div>\n            <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n            <small>{{ recipe.description }}</small>\n        </div>\n        <img src=\"{{ recipe.imagePath }}\" alt=\"{{ recipe.name }}\" class=\"img-responsive\" style=\"max-height: 50px;\">\n    </div>\n</a>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipeModel } from '../../models/recipe.model';\nimport { RecipeService } from '../../services/recipe.Service';\n\n@Component({\n  selector: 'app-recipes-list',\n  templateUrl: './recipes-list.component.html',\n  styleUrls: ['./recipes-list.component.css']\n})\nexport class RecipesListComponent implements OnInit {\n\n  recipes: RecipeModel[] = [];\n\n  constructor(private recipeService: RecipeService,\n    private router: Router, \n    private route: ActivatedRoute\n     ) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">        \n        <app-recipes-item\n         *ngFor=\"let recipeEl of recipes; let i = index\"\n          [recipe]=\"recipeEl\"\n          [index]=\"i\"\n         ></app-recipes-item>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes-start',\n  templateUrl: './recipes-start.component.html',\n  styleUrls: ['./recipes-start.component.css']\n})\nexport class RecipesStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please Select Recipe </h3>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoleService } from 'src/app/services/role.Service';\nimport { RoleModel } from 'src/app/models/role.model';\n\n@Component({\n  selector: 'app-roles-list',\n  templateUrl: './roles-list.component.html',\n  styleUrls: ['./roles-list.component.css']\n})\nexport class RolesListComponent implements OnInit, OnDestroy {\n\n  roleList: RoleModel[];\n  private subscription: Subscription;\n\n  constructor(private rlService: RoleService) {\n   }\n\n  ngOnInit(): void {\n    this.roleList = this.rlService.getRoleList();\n    this.subscription = this.rlService.roleListChanged\n      .subscribe(\n        (roleList: RoleModel[]) => {\n          this.roleList = roleList;\n        }\n      );\n  }\n\n  onEditRole(index: number) {\n    this.rlService.startedEditing.next(index);\n  }\n\n  onDeleteRole(index: number) {\n    this.rlService.deleteRole(index);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Created At</th>\n        <th scope=\"col\">Edit</th>\n        <th scope=\"col\">Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let role of roleList; let i = index\">\n        <td>{{ role.name }}</td>\n        <td>{{ role.status }}</td>\n        <td>{{ role.createdAt }}</td>\n        <td><button type=\"button\" class=\"btn btn-success\" (click)=\"onEditRole(i)\">Edit</button></td>\n        <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteRole(i)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RoleService } from '../services/role.Service';\nimport { RoleModel } from '../models/role.model';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) rlForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: RoleModel;\n  \n  constructor(private rlService: RoleService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.rlService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.editedItem = this.rlService.getRole(index);\n          this.rlForm.setValue({\n            name: this.editedItem.name,\n            status: this.editedItem.status\n          })\n        }\n      );\n  }\n\n  onSubmit(form: NgForm) {\n    let { name, status } = form.value;\n    status = status ? true : false;\n    const newRole = new RoleModel(name, status, new Date().toLocaleString());\n    if (this.editMode) {\n      this.rlService.updateRole(this.editedItemIndex, newRole);\n    } else {\n      this.rlService.addRole(newRole);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onReset() {\n    this.rlForm.reset();\n    this.editMode = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"container mt-4\">\n    <h4>{{ editMode ? 'Update' : 'Add' }} Role</h4>\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n        <div class=\"form-group\">\n            <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Role Name\"\n                name=\"name\"\n                required\n                ngModel\n                >\n        </div>\n        <div class=\"form-group form-check\">\n            <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                name=\"status\"\n                ngModel\n                >\n            <label class=\"form-check-label\">Status</label>\n        </div>\n        <button\n           type=\"submit\" \n           class=\"btn btn-primary mr-2\" \n           [disabled]=\"!f.valid\">\n           {{ editMode ? 'Update' : 'Add' }}\n        </button>\n        <button\n            class=\"btn btn-primary\"\n            type=\"button\"\n            (click)=\"onReset()\">Reset\n        </button>\n      </form>\n</div>\n\n<!-- List of Roles -->\n<div class=\"container mt-5\">\n    <h4>Role List</h4>\n    <div class=\"table-responsive\">\n        <app-roles-list></app-roles-list>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ToDoComponent } from '../to-do/to-do.component';\nimport { ReciepsComponent } from '../recieps/recieps.component';\nimport { RecipesStartComponent } from '../recieps/recipes-start/recipes-start.component';\nimport { RecipesDetailComponent } from '../recieps/recipes-detail/recipes-detail.component';\nimport { RolesComponent } from '../roles/roles.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: ToDoComponent },\n  { path: 'recipes', component: ReciepsComponent,\n   children: [\n      { path: '', component: RecipesStartComponent },\n      { path: ':id', component: RecipesDetailComponent }\n    ] \n  },\n  { path: 'roles', component: RolesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { RecipeModel } from '../models/recipe.model';\r\n\r\nexport class RecipeService {\r\n    private recipes: RecipeModel[] = [\r\n        new RecipeModel('Shrimp Recipes', 'These shrimp recipes are easy enough for a quick weeknight dinner, delish enough for date night', \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-taco-lime-shrimp-still006-1527253576.jpeg\"),\r\n        new RecipeModel('Potato Recipes', 'Baked, fried, or mashed, there\"s no wrong way to cook potatoes. Need more comfort food?', \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/fried-mashed-potato-balls-horizontal-1533320721.jpg\")  \r\n    ];\r\n\r\n    getRecipes() {\r\n        return this.recipes.slice();\r\n    }\r\n\r\n    getRecipe(index: number) {\r\n        return this.recipes[index];\r\n    }\r\n}","import { Subject } from 'rxjs'\r\nimport { RoleModel } from '../models/role.model';\r\n\r\nexport class RoleService {\r\n  roleListChanged = new Subject<RoleModel[]>();\r\n  startedEditing = new Subject<number>();\r\n  roleList: RoleModel[] = [];\r\n\r\n  constructor() {\r\n    const createdAt = new Date().toLocaleString();\r\n    this.roleList.push(\r\n      new RoleModel('Admin', true, createdAt),\r\n      new RoleModel('Super Admin', true, createdAt)\r\n    );\r\n   }\r\n\r\n  getRoleList() {\r\n    return this.roleList.slice();\r\n  }\r\n\r\n  getRole(index: number) {\r\n    return this.roleList[index];\r\n  }\r\n\r\n  addRole(role: RoleModel) {\r\n    this.roleList.push(role);\r\n    console.log('addRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n\r\n  updateRole(index: number, newRole: RoleModel) {\r\n    this.roleList[index] = newRole;\r\n    console.log('updateRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n\r\n  deleteRole(index: number) {\r\n    this.roleList.splice(index, 1);\r\n    console.log('deleteRole -------> ', this.roleList);\r\n    this.roleListChanged.next(this.roleList.slice());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.css']\n})\nexport class ToDoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container my-4\">\n    <p class=\"font-weight-bold\">To-Do List</p>\n    <ul class=\"list-group list-group-flush\">\n      \n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check1\" checked>\n          <label class=\"custom-control-label\" for=\"check1\">Added Routes</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check2\" checked>\n          <label class=\"custom-control-label\" for=\"check2\">Added Form</label>\n        </div>\n      </li>\n      \n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check8\" checked>\n          <label class=\"custom-control-label\" for=\"check8\">Added Http</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check3\">\n          <label class=\"custom-control-label\" for=\"check3\">Added NgRx for State Management</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check4\">\n          <label class=\"custom-control-label\" for=\"check4\">Dapper to access SQL Database using Repository Patter</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check5\" checked>\n          <label class=\"custom-control-label\" for=\"check5\">Use three layer architecture in API</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check6\">\n          <label class=\"custom-control-label\" for=\"check6\">Log the Input and Output from API in Serilog</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check7\">\n          <label class=\"custom-control-label\" for=\"check7\">Enable Elmah for enception handling</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check9\" checked>\n          <label class=\"custom-control-label\" for=\"check9\">Added Swagger and JWT</label>\n        </div>\n      </li>\n\n      <li class=\"list-group-item\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"check10\" checked>\n          <label class=\"custom-control-label\" for=\"check10\">Added Migration, DB Connection</label>\n        </div>\n      </li>\n\n    </ul>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}